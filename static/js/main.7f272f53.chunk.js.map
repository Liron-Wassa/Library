{"version":3,"sources":["components/NavBar/NavBar.module.css","components/BookDetails/BookDetails.module.css","components/Favorites/Favorite.module.css","components/BookList/BookList.module.css","components/Description/Description.module.css","components/Loading/Loading.module.css","components/Library/Library.module.css","components/History/History.module.css","contexts/BookListContext.js","contexts/PaginationContext.js","components/Description/Description.js","components/BookDetails/BookDetails.js","components/Pagination/Pagination.js","components/Favorites/Favorites.js","components/SearchBook/SearchBook.js","components/Loading/Loading.js","components/BookList/BookList.js","components/Library/Library.js","components/History/History.js","components/NavBar/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BookListContext","createContext","BookListContextProvider","props","useState","JSON","parse","localStorage","getItem","favorites","setFavorites","isLoading","setLoad","books","setBooks","Provider","value","error","findBooks","book","axios","get","then","res","status","data","items","catch","err","console","log","addFavorit","id","bookIndex","findIndex","push","setItem","stringify","removeFavorite","newFavorites","filter","favorite","children","PaginationContext","PaginationContextProvider","booksPerPage","currentPage","setCurrentPage","indexOfLastBooks","indexOfFirstBooks","paginate","page","pageLength","setPagesNumber","Description","className","classes","text","location","description","BookDetails","bookId","setDescription","useContext","favoritesId","idx","length","Card","includes","unList","List","Img","variant","src","volumeInfo","imageLinks","smallThumbnail","image","Body","Title","title","Text","subtitle","Button","onClick","Paginations","totalBooks","pageNumber","Math","ceil","useEffect","Pagination","Prev","map","number","index","Item","active","key","Next","Favorites","currentBooks","slice","to","pathname","favoriteElements","header","pagination","FavoriteList","SearchBook","inputElementRef","useRef","InputGroup","Prepend","histories","isNaN","search","date","Date","toLocaleDateString","current","alert","FormControl","onChange","e","target","placeholder","ref","Loading","Spinner","animation","BookList","booksElemnt","Library","History","historiesElement","history","Table","striped","bordered","hover","NavBar","Navbar","bg","sticky","Brand","Nav","navBar","icon","App","basename","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7f272f53.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"NavBar_icon__AjRub\",\"navBar\":\"NavBar_navBar__1ar9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"BookDetails_List__W0lNE\",\"unList\":\"BookDetails_unList__MoOvp\",\"image\":\"BookDetails_image__1TAnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FavoriteList\":\"Favorite_FavoriteList__SDDOu\",\"List\":\"Favorite_List__1BRHQ\",\"image\":\"Favorite_image__3442X\",\"header\":\"Favorite_header__15Ezl\",\"pagination\":\"Favorite_pagination__2yi33\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BookList\":\"BookList_BookList__17Jao\",\"error\":\"BookList_error__pfgLJ\",\"pagination\":\"BookList_pagination__3-dUH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Description\":\"Description_Description__2PdwP\",\"text\":\"Description_text__29dKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"Loading_Loading__2R7VM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Library_header__XiuvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"History_header__1sxnu\"};","import React, { createContext, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const BookListContext = createContext();\r\n\r\nfunction BookListContextProvider(props) {\r\n\r\n    const [favorites, setFavorites] = useState(JSON.parse(localStorage.getItem(\"favorites\")) || []);\r\n    const [isLoading, setLoad] = useState(false);\r\n    const [books, setBooks] = useState([]);\r\n    const error = \"Not found\";\r\n\r\n    let findBooks = (book) => {\r\n        setLoad(true);\r\n        axios.get(`https://www.googleapis.com/books/v1/volumes?q=search+${book}`).then(res => {\r\n            if(res.status === 200){\r\n                setBooks(res.data.items);\r\n                setLoad(false);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    let addFavorit = (id) => {\r\n        let bookIndex = books.findIndex(book => {\r\n            return book.id === id;\r\n        });\r\n\r\n        let favorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];             \r\n        if(favorites){\r\n            favorites.push(books[bookIndex]);\r\n            localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n        }\r\n        else{\r\n            favorites.push(books[bookIndex]);\r\n            localStorage.setItem(\"favorites\", JSON.stringify(favorites));\r\n        }\r\n        setFavorites(favorites);\r\n    }\r\n\r\n    let removeFavorite = (id) => {        \r\n        let newFavorites = favorites.filter(favorite => {\r\n            return favorite.id !== id;\r\n        });            \r\n        localStorage.setItem(\"favorites\", JSON.stringify(newFavorites));\r\n        setFavorites(newFavorites);\r\n    }\r\n\r\n    return <BookListContext.Provider value={{\r\n            books,\r\n            error,\r\n            isLoading,\r\n            favorites,\r\n            findBooks,\r\n            addFavorit,\r\n            removeFavorite\r\n        }}>\r\n        {props.children}\r\n    </BookListContext.Provider>\r\n}\r\n\r\nexport default BookListContextProvider;","import React, { useState, createContext } from 'react';\r\n\r\nexport const PaginationContext = createContext();\r\n\r\nfunction PaginationContextProvider(props) {\r\n\r\n    const [booksPerPage] = useState(2);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const indexOfLastBooks = currentPage * booksPerPage;\r\n    const indexOfFirstBooks = indexOfLastBooks - booksPerPage;\r\n    \r\n    let setPagesNumber = () => {\r\n        setCurrentPage(currentPage - 1);\r\n    }\r\n        \r\n    let paginate = (page, pageLength) => {\r\n        if(page === \"Prev\"){\r\n            if(currentPage > 1){\r\n                setCurrentPage(currentPage - 1);\r\n            }\r\n        }\r\n        else if(page === \"Next\"){\r\n            if(currentPage < pageLength){\r\n                setCurrentPage(currentPage + 1);\r\n            }\r\n        }\r\n        else{\r\n            setCurrentPage(page);\r\n        }\r\n    }\r\n\r\n    return <PaginationContext.Provider value={{\r\n            indexOfFirstBooks,\r\n            indexOfLastBooks,\r\n            booksPerPage,\r\n            currentPage,\r\n            paginate,\r\n            setPagesNumber\r\n        }}>\r\n        {props.children}\r\n    </PaginationContext.Provider>\r\n}\r\n\r\nexport default PaginationContextProvider;","import classes from './Description.module.css';\r\nimport React from 'react';\r\n\r\nfunction Description(props) {\r\n    \r\n    return <div className={classes.Description}>\r\n        <p className={classes.text}>\r\n            {props.location.description}\r\n        </p>\r\n    </div>\r\n}\r\n\r\nexport default Description;","import { BookListContext } from '../../contexts/BookListContext';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport classes from './BookDetails.module.css';\r\nimport React, { useContext } from 'react';\r\n\r\nfunction BookDetails({ book, bookId, setDescription }) {\r\n\r\n    const { addFavorit, removeFavorite, favorites } = useContext(BookListContext);\r\n\r\n    let favoritesId = [];\r\n    for (let idx = 0; idx < favorites.length; idx++) {\r\n        favoritesId[idx] = favorites[idx].id;\r\n    }\r\n\r\n    return <Card className={favoritesId.includes(book.id) ? classes.unList : classes.List}>\r\n        <Card.Img\r\n            variant=\"top\"\r\n            src={book.volumeInfo.imageLinks.smallThumbnail}\r\n            className={classes.image}\r\n        />\r\n        <Card.Body>\r\n        <Card.Title>{book.volumeInfo.title}</Card.Title>\r\n        <Card.Text>{book.volumeInfo.subtitle}</Card.Text>\r\n        <Button\r\n            variant=\"secondary\"\r\n            className=\"mr-1\"\r\n            onClick={favoritesId.includes(book.id) ? () => removeFavorite(book.id) : () => addFavorit(bookId)}\r\n        >\r\n            {favoritesId.includes(book.id) ? \"Remove\" : \"Add to favorite\"}\r\n        </Button>\r\n        {book.volumeInfo.description ?\r\n            <Button variant=\"secondary\" onClick={() => setDescription(book.volumeInfo.description)}>\r\n                Description\r\n            </Button>\r\n        : null}\r\n        </Card.Body>\r\n    </Card>\r\n}\r\n\r\nexport default BookDetails;","import { PaginationContext } from '../../contexts/PaginationContext';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport React, { useContext, useEffect } from 'react';\r\n\r\nfunction Paginations({ booksPerPage, totalBooks }) {\r\n\r\n    const { paginate, currentPage, setPagesNumber } = useContext(PaginationContext);\r\n    const pageNumber = [];\r\n    \r\n    for (let idx = 1; idx <= Math.ceil(totalBooks / booksPerPage); idx++) {\r\n        pageNumber.push(idx);\r\n    }\r\n\r\n    useEffect(() => {        \r\n        if(currentPage === 2){\r\n            setPagesNumber();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [totalBooks]);\r\n\r\n    return <Pagination>\r\n        <Pagination.Prev onClick={() => paginate(\"Prev\", pageNumber.length)} />\r\n        {pageNumber.map((number, index) => {\r\n            return currentPage === number ? \r\n            <Pagination.Item active key={number} onClick={() => paginate(number)}>{number}</Pagination.Item> :\r\n            <Pagination.Item key={number} onClick={() => paginate(number)}>{number}</Pagination.Item>\r\n        })}\r\n        <Pagination.Next onClick={() => paginate(\"Next\", pageNumber.length)} />\r\n    </Pagination>\r\n}\r\n\r\nexport default Paginations;","import { PaginationContext } from '../../contexts/PaginationContext';\r\nimport { BookListContext } from '../../contexts/BookListContext';\r\nimport BookDetails from '../BookDetails/BookDetails';\r\nimport Paginations from '../Pagination/Pagination';\r\nimport classes from './Favorite.module.css';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction Favorites() {\r\n    \r\n    const [description, setDescription] = useState(\"\");\r\n    const { favorites } = useContext(BookListContext);\r\n    const { indexOfFirstBooks, indexOfLastBooks, booksPerPage } = useContext(PaginationContext);\r\n    const currentBooks = favorites.slice(indexOfFirstBooks, indexOfLastBooks);\r\n        \r\n    if(description.length){\r\n        return <Redirect to={{\r\n            pathname: `/description`,\r\n            description: description\r\n        }}/>\r\n    }\r\n\r\n    let favoriteElements = currentBooks.map(favorite => {\r\n        return <BookDetails key={favorite.id} book={favorite} setDescription={setDescription} />\r\n    });\r\n    \r\n    return <div>\r\n        <h1 className={classes.header}>Favorites</h1>\r\n        <div className={classes.pagination}>\r\n            {favorites.length ? <Paginations booksPerPage={booksPerPage} totalBooks={favorites.length} /> : null}\r\n        </div>\r\n\r\n        <div className={classes.FavoriteList}>\r\n            {favoriteElements}\r\n        </div>\r\n    </div>\r\n    \r\n}\r\n\r\nexport default Favorites;","import React, { useContext, useRef } from 'react';\r\nimport { BookListContext } from '../../contexts/BookListContext';\r\nimport { Button, InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nfunction SearchBook() {\r\n\r\n    const { findBooks } = useContext(BookListContext);\r\n    const inputElementRef = useRef(null);\r\n    let book = \"\";\r\n\r\n    let changeInputHandler = (e) => {\r\n        book = e.target.value;\r\n    }\r\n\r\n    let searchBook = () => {\r\n        let histories = JSON.parse(localStorage.getItem(\"history\")) || [];\r\n        if(isNaN(book)){\r\n            findBooks(book);\r\n            histories.push({search: book, date: new Date().toLocaleDateString()});\r\n            localStorage.setItem(\"history\", JSON.stringify(histories));\r\n            inputElementRef.current.value = \"\";\r\n            book = \"\";\r\n        }\r\n        else{\r\n            alert(\"Enter a book!!!\");\r\n        }\r\n    }\r\n\r\n    return <InputGroup className=\"mb-3 container\">\r\n        <InputGroup.Prepend>\r\n            <Button variant=\"dark\" onClick={searchBook}>Search</Button>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n            onChange={changeInputHandler}\r\n            placeholder=\"Book\"\r\n            ref={inputElementRef}\r\n        />\r\n    </InputGroup>\r\n}\r\n\r\nexport default SearchBook;","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport classes from './Loading.module.css';\r\n\r\nfunction Loading() {\r\n    return <Spinner animation=\"border\" variant=\"secondary\" className={classes.Loading} />\r\n}\r\n\r\nexport default Loading;","import { PaginationContext } from '../../contexts/PaginationContext';\r\nimport { BookListContext } from '../../contexts/BookListContext';\r\nimport BookDetails from '../BookDetails/BookDetails';\r\nimport React, { useContext, useState } from 'react';\r\nimport Paginations from '../Pagination/Pagination';\r\nimport classes from './BookList.module.css';\r\nimport Loading from '../Loading/Loading';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction BookList() {\r\n\r\n    const [description, setDescription] = useState(\"\");\r\n    const { indexOfFirstBooks, indexOfLastBooks, booksPerPage } = useContext(PaginationContext);\r\n    const { books, error, isLoading } = useContext(BookListContext);\r\n    const currentBooks = books.slice(indexOfFirstBooks, indexOfLastBooks);\r\n    let booksElemnt;\r\n\r\n    if(description.length){\r\n        return <Redirect to={{\r\n            pathname: `/description`,\r\n            description: description\r\n        }}/>\r\n    } \r\n\r\n    if(!isLoading){\r\n        if(currentBooks){\r\n            booksElemnt = currentBooks.map(book => {                \r\n                return <BookDetails key={book.id} book={book} bookId={book.id} setDescription={setDescription} />\r\n            });\r\n        }\r\n        else{        \r\n            booksElemnt= <h1 className={classes.error}>{error}</h1>;\r\n        }\r\n    }\r\n    else{\r\n        return <Loading />\r\n    }\r\n\r\n    return <div>\r\n        {books.length ? <div className={classes.pagination}>\r\n            <Paginations booksPerPage={booksPerPage} totalBooks={books.length} />\r\n        </div> : null}\r\n        <div className={classes.BookList}>\r\n            {booksElemnt}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default BookList;","import SearchBook from '../../components/SearchBook/SearchBook';\r\nimport BookList from '../../components/BookList/BookList';\r\nimport classes from './Library.module.css';\r\nimport React from 'react';\r\n\r\nfunction Library() {\r\n    return <div>\r\n        <h1 className={classes.header}>Library</h1>\r\n        <SearchBook />\r\n        <BookList />\r\n    </div>\r\n}\r\n\r\nexport default Library;","import classes from './History.module.css';\r\nimport { Table } from 'react-bootstrap';\r\nimport React from 'react';\r\n\r\nfunction History() {\r\n\r\n    let histories = JSON.parse(localStorage.getItem(\"history\")) || [];\r\n\r\n    let historiesElement = histories.map((history, index) => {\r\n        return <tr key={index}>\r\n            <td>{history.search}</td>\r\n            <td>{history.date}</td>\r\n        </tr>\r\n    });\r\n\r\n    return <div>\r\n        <h1 className={classes.header}>Search History</h1>\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Search</th>\r\n                    <th>Date</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {historiesElement}\r\n            </tbody>\r\n        </Table>\r\n    </div>\r\n}\r\n\r\nexport default History;","import { BookListContext } from '../../contexts/BookListContext';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport classes from './NavBar.module.css';\r\nimport React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n\r\n    const { favorites } = useContext(BookListContext);\r\n\r\n    return <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n        <Navbar.Brand>Navbar</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <div className={classes.navBar}>\r\n            <Link to=\"/\" className={classes.navBar}>Home</Link>\r\n            <Link to=\"/history\" className={classes.navBar}>History</Link>\r\n            <Link to=\"/favorites\"  className={classes.navBar}>\r\n              <span>Favorites</span>\r\n              {favorites.length ?\r\n                <span className={classes.icon}>\r\n                  <span className=\"badge badge-danger\">{favorites.length}</span>\r\n                </span>\r\n              : null}\r\n            </Link>\r\n          </div>\r\n        </Nav>\r\n  </Navbar>\r\n}\r\n\r\nexport default NavBar;","import BookListContextProvider from './contexts/BookListContext';\nimport PaginationContextProvider from './contexts/PaginationContext';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Description from './components/Description/Description';\nimport Favorites from './components/Favorites/Favorites';\nimport Library from './components/Library/Library';\nimport History from './components/History/History';\nimport NavBar from './components/NavBar/NavBar';\nimport React from 'react';\nimport './App.css';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <HashRouter basename=\"/\">\n        <Switch>\n          <BookListContextProvider>\n            <NavBar />\n            <PaginationContextProvider>\n              <Route exact path=\"/\" component={Library}/>\n              <Route path=\"/favorites\" component={Favorites}/>\n            </PaginationContextProvider>\n            <Route path=\"/history\" component={History}/>\n            <Route path=\"/description\" component={Description}/>\n          </BookListContextProvider>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}